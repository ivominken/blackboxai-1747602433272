"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/lib/matching.ts":
/*!*****************************!*\
  !*** ./src/lib/matching.ts ***!
  \*****************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getMatchingStatistics: function() { return /* binding */ getMatchingStatistics; },\n/* harmony export */   matchTransactionsWithInvoices: function() { return /* binding */ matchTransactionsWithInvoices; },\n/* harmony export */   updateMatch: function() { return /* binding */ updateMatch; }\n/* harmony export */ });\n/* harmony import */ var _parsers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./parsers */ \"(app-pages-browser)/./src/lib/parsers.ts\");\n\nfunction parseInvoiceDate(dateStr) {\n    // Parse DD-MM-YYYY format\n    const [day, month, year] = dateStr.split(\"-\").map(Number);\n    return new Date(year, month - 1, day);\n}\nfunction parseTransactionDate(dateStr) {\n    // Parse YYYY-MM-DD format\n    const [year, month, day] = dateStr.split(\"-\").map(Number);\n    return new Date(year, month - 1, day);\n}\nfunction cleanDescription(desc) {\n    return desc.toLowerCase().replace(\"factuur \", \"\").trim();\n}\nfunction matchTransactionsWithInvoices(transactions, invoices) {\n    console.log(\"Starting matching process...\");\n    console.log(\"Transactions:\", transactions);\n    console.log(\"Invoices:\", invoices);\n    const results = [];\n    const usedTransactions = new Set();\n    // First, handle invoices marked as paid\n    invoices.forEach((invoice)=>{\n        const amount = (0,_parsers__WEBPACK_IMPORTED_MODULE_0__.parseDutchAmount)(invoice.bedragInclBtw);\n        console.log(\"Processing invoice \".concat(invoice.factuurnummer, \" with amount:\"), amount);\n        if (invoice.status === \"Definitief\") {\n            // Find card payment transaction (Rabobank Smart Pay) one day after invoice date\n            const cardPayment = transactions.find((t)=>{\n                if (usedTransactions.has(t.transactiereferentie)) return false;\n                if (t.naamTegenpartij !== \"Rabobank Smart Pay\") return false;\n                const invDate = parseInvoiceDate(invoice.factuurdatum);\n                const transDate = parseTransactionDate(t.datum);\n                // Check if transaction is one day after invoice\n                const dayDiff = (transDate.getTime() - invDate.getTime()) / (1000 * 60 * 60 * 24);\n                if (dayDiff !== 1) return false;\n                const tAmount = (0,_parsers__WEBPACK_IMPORTED_MODULE_0__.parseDutchAmount)(t.bedrag);\n                console.log(\"Comparing card payment amounts:\", {\n                    invoice: Math.abs(amount.value),\n                    transaction: Math.abs(tAmount.value)\n                });\n                return Math.abs(tAmount.value) === Math.abs(amount.value);\n            });\n            if (cardPayment) {\n                usedTransactions.add(cardPayment.transactiereferentie);\n                results.push({\n                    invoice,\n                    bankTransaction: cardPayment,\n                    matchType: \"CARD_PAYMENT\",\n                    matchedAmount: amount,\n                    confidence: 1.0\n                });\n                console.log(\"Found card payment match for invoice \".concat(invoice.factuurnummer));\n                return;\n            }\n            // If no card payment found, look for regular payment match\n            const matchingTransaction = transactions.find((t)=>{\n                if (usedTransactions.has(t.transactiereferentie)) return false;\n                const tAmount = (0,_parsers__WEBPACK_IMPORTED_MODULE_0__.parseDutchAmount)(t.bedrag);\n                console.log(\"Comparing regular payment amounts:\", {\n                    invoice: Math.abs(amount.value),\n                    transaction: Math.abs(tAmount.value)\n                });\n                return Math.abs(tAmount.value) === Math.abs(amount.value);\n            });\n            if (matchingTransaction) {\n                usedTransactions.add(matchingTransaction.transactiereferentie);\n                console.log(\"Found regular payment match for invoice \".concat(invoice.factuurnummer));\n            }\n            results.push({\n                invoice,\n                bankTransaction: matchingTransaction,\n                matchType: matchingTransaction ? \"PAID_STATUS\" : \"UNMATCHED\",\n                matchedAmount: amount,\n                confidence: matchingTransaction ? 0.5 : 0\n            });\n            return;\n        }\n        // Try to find exact match by invoice number in transaction description\n        const exactMatch = transactions.find((t)=>{\n            if (usedTransactions.has(t.transactiereferentie)) return false;\n            const descriptions = [\n                t.omschrijving1,\n                t.omschrijving2,\n                t.omschrijving3\n            ].filter(Boolean);\n            const cleanInvoiceNumber = invoice.factuurnummer.toLowerCase();\n            const hasInvoiceNumber = descriptions.some((desc)=>{\n                if (!desc) return false;\n                const cleanDesc = cleanDescription(desc);\n                const matches = cleanDesc.includes(cleanInvoiceNumber);\n                console.log(\"Checking invoice number match:\", {\n                    invoiceNumber: cleanInvoiceNumber,\n                    description: cleanDesc,\n                    matches\n                });\n                return matches;\n            });\n            if (!hasInvoiceNumber) return false;\n            const tAmount = (0,_parsers__WEBPACK_IMPORTED_MODULE_0__.parseDutchAmount)(t.bedrag);\n            console.log(\"Found invoice number, comparing amounts:\", {\n                invoice: Math.abs(amount.value),\n                transaction: Math.abs(tAmount.value)\n            });\n            // For CAK payments, allow 75% of invoice amount\n            if (t.naamTegenpartij.toLowerCase().includes(\"cak\")) {\n                return Math.abs(tAmount.value) === Math.abs(amount.value) * 0.75;\n            }\n            // For other payments, require exact amount match\n            return Math.abs(tAmount.value) === Math.abs(amount.value);\n        });\n        if (exactMatch) {\n            usedTransactions.add(exactMatch.transactiereferentie);\n            const tAmount = (0,_parsers__WEBPACK_IMPORTED_MODULE_0__.parseDutchAmount)(exactMatch.bedrag);\n            results.push({\n                invoice,\n                bankTransaction: exactMatch,\n                matchType: \"INVOICE_NUMBER\",\n                matchedAmount: tAmount,\n                confidence: 1.0 // Set to 100% for invoice number matches with correct amount\n            });\n            console.log(\"Found exact match for invoice \".concat(invoice.factuurnummer));\n            return;\n        }\n        // No match found\n        console.log(\"No match found for invoice \".concat(invoice.factuurnummer));\n        results.push({\n            invoice,\n            bankTransaction: undefined,\n            matchType: \"UNMATCHED\",\n            matchedAmount: amount,\n            confidence: 0\n        });\n    });\n    console.log(\"Matching results:\", results);\n    return results;\n}\nfunction updateMatch(existingMatches, transaction, invoice) {\n    // Remove any existing matches for this invoice\n    const filteredMatches = existingMatches.filter((match)=>match.invoice !== invoice);\n    // Add the new match\n    filteredMatches.push({\n        bankTransaction: transaction,\n        invoice,\n        matchType: transaction ? \"MANUAL\" : \"UNMATCHED\",\n        confidence: transaction ? 1 : 0,\n        matchedAmount: (0,_parsers__WEBPACK_IMPORTED_MODULE_0__.parseDutchAmount)(invoice.bedragInclBtw)\n    });\n    return filteredMatches;\n}\nfunction getMatchingStatistics(matches) {\n    const stats = {\n        totalMatches: matches.length,\n        byType: {\n            PAID_STATUS: 0,\n            INVOICE_NUMBER: 0,\n            CARD_PAYMENT: 0,\n            MANUAL: 0,\n            UNMATCHED: 0\n        },\n        totalAmount: 0,\n        matchedAmount: 0,\n        unmatchedAmount: 0\n    };\n    matches.forEach((match)=>{\n        // Count by type\n        stats.byType[match.matchType]++;\n        // Sum amounts\n        const amount = Math.abs(match.matchedAmount.value);\n        stats.totalAmount += amount;\n        if (match.matchType !== \"UNMATCHED\") {\n            stats.matchedAmount += amount;\n        } else {\n            stats.unmatchedAmount += amount;\n        }\n    });\n    return stats;\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/lib/matching.ts\n"));

/***/ })

});