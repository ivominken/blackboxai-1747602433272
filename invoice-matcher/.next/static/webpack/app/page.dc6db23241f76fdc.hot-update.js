"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/lib/matching.ts":
/*!*****************************!*\
  !*** ./src/lib/matching.ts ***!
  \*****************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getMatchingStatistics: function() { return /* binding */ getMatchingStatistics; },\n/* harmony export */   matchTransactionsWithInvoices: function() { return /* binding */ matchTransactionsWithInvoices; },\n/* harmony export */   updateMatch: function() { return /* binding */ updateMatch; }\n/* harmony export */ });\n/* harmony import */ var _parsers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./parsers */ \"(app-pages-browser)/./src/lib/parsers.ts\");\n\nfunction parseInvoiceDate(dateStr) {\n    // Parse DD-MM-YYYY format\n    const [day, month, year] = dateStr.split(\"-\").map(Number);\n    return new Date(year, month - 1, day);\n}\nfunction parseTransactionDate(dateStr) {\n    // Parse YYYY-MM-DD format\n    const [year, month, day] = dateStr.split(\"-\").map(Number);\n    return new Date(year, month - 1, day);\n}\nfunction cleanDescription(desc) {\n    return desc.toLowerCase().replace(\"factuur \", \"\").trim();\n}\nfunction matchTransactionsWithInvoices(transactions, invoices) {\n    const results = [];\n    const usedTransactions = new Set();\n    // First, handle invoices marked as paid\n    invoices.forEach((invoice)=>{\n        const amount = (0,_parsers__WEBPACK_IMPORTED_MODULE_0__.parseDutchAmount)(invoice.bedragInclBtw);\n        if (invoice.status === \"Definitief\") {\n            // Find card payment transaction (Rabobank Smart Pay) one day after invoice date\n            const cardPayment = transactions.find((t)=>{\n                if (usedTransactions.has(t.transactiereferentie)) return false;\n                if (t.naamTegenpartij !== \"Rabobank Smart Pay\") return false;\n                const invDate = parseInvoiceDate(invoice.factuurdatum);\n                const transDate = parseTransactionDate(t.datum);\n                // Check if transaction is one day after invoice\n                const dayDiff = (transDate.getTime() - invDate.getTime()) / (1000 * 60 * 60 * 24);\n                if (dayDiff !== 1) return false;\n                const tAmount = (0,_parsers__WEBPACK_IMPORTED_MODULE_0__.parseDutchAmount)(t.bedrag);\n                return Math.abs(tAmount.value) === Math.abs(amount.value);\n            });\n            if (cardPayment) {\n                usedTransactions.add(cardPayment.transactiereferentie);\n                results.push({\n                    invoice,\n                    bankTransaction: cardPayment,\n                    matchType: \"CARD_PAYMENT\",\n                    matchedAmount: amount,\n                    confidence: 1.0\n                });\n                return;\n            }\n            // If no card payment found, look for regular payment match\n            const matchingTransaction = transactions.find((t)=>{\n                if (usedTransactions.has(t.transactiereferentie)) return false;\n                const tAmount = (0,_parsers__WEBPACK_IMPORTED_MODULE_0__.parseDutchAmount)(t.bedrag);\n                return Math.abs(tAmount.value) === Math.abs(amount.value);\n            });\n            if (matchingTransaction) {\n                usedTransactions.add(matchingTransaction.transactiereferentie);\n            }\n            results.push({\n                invoice,\n                bankTransaction: matchingTransaction,\n                matchType: matchingTransaction ? \"PAID_STATUS\" : \"UNMATCHED\",\n                matchedAmount: amount,\n                confidence: matchingTransaction ? 0.5 : 0\n            });\n            return;\n        }\n        // Try to find exact match by invoice number in transaction description\n        const exactMatch = transactions.find((t)=>{\n            if (usedTransactions.has(t.transactiereferentie)) return false;\n            const descriptions = [\n                t.omschrijving1,\n                t.omschrijving2,\n                t.omschrijving3\n            ].filter(Boolean);\n            const cleanInvoiceNumber = invoice.factuurnummer.toLowerCase();\n            const hasInvoiceNumber = descriptions.some((desc)=>{\n                if (!desc) return false;\n                const cleanDesc = cleanDescription(desc);\n                return cleanDesc.includes(cleanInvoiceNumber);\n            });\n            if (!hasInvoiceNumber) return false;\n            const tAmount = (0,_parsers__WEBPACK_IMPORTED_MODULE_0__.parseDutchAmount)(t.bedrag);\n            // For CAK payments, allow 75% of invoice amount\n            if (t.naamTegenpartij.toLowerCase().includes(\"cak\")) {\n                return Math.abs(tAmount.value) === Math.abs(amount.value) * 0.75;\n            }\n            // For other payments, require exact amount match\n            return Math.abs(tAmount.value) === Math.abs(amount.value);\n        });\n        if (exactMatch) {\n            usedTransactions.add(exactMatch.transactiereferentie);\n            const tAmount = (0,_parsers__WEBPACK_IMPORTED_MODULE_0__.parseDutchAmount)(exactMatch.bedrag);\n            results.push({\n                invoice,\n                bankTransaction: exactMatch,\n                matchType: \"INVOICE_NUMBER\",\n                matchedAmount: tAmount,\n                confidence: 1.0 // Set to 100% for invoice number matches with correct amount\n            });\n            return;\n        }\n        // No match found\n        results.push({\n            invoice,\n            bankTransaction: undefined,\n            matchType: \"UNMATCHED\",\n            matchedAmount: amount,\n            confidence: 0\n        });\n    });\n    return results;\n}\nfunction updateMatch(existingMatches, transaction, invoice) {\n    // Remove any existing matches for this invoice\n    const filteredMatches = existingMatches.filter((match)=>match.invoice !== invoice);\n    // Add the new match\n    filteredMatches.push({\n        bankTransaction: transaction,\n        invoice,\n        matchType: transaction ? \"MANUAL\" : \"UNMATCHED\",\n        confidence: transaction ? 1 : 0,\n        matchedAmount: (0,_parsers__WEBPACK_IMPORTED_MODULE_0__.parseDutchAmount)(invoice.bedragInclBtw)\n    });\n    return filteredMatches;\n}\nfunction getMatchingStatistics(matches) {\n    const stats = {\n        totalMatches: matches.length,\n        byType: {\n            PAID_STATUS: 0,\n            INVOICE_NUMBER: 0,\n            CARD_PAYMENT: 0,\n            MANUAL: 0,\n            UNMATCHED: 0\n        },\n        totalAmount: 0,\n        matchedAmount: 0,\n        unmatchedAmount: 0\n    };\n    matches.forEach((match)=>{\n        // Count by type\n        stats.byType[match.matchType]++;\n        // Sum amounts\n        const amount = Math.abs(match.matchedAmount.value);\n        stats.totalAmount += amount;\n        if (match.matchType !== \"UNMATCHED\") {\n            stats.matchedAmount += amount;\n        } else {\n            stats.unmatchedAmount += amount;\n        }\n    });\n    return stats;\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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Z0QsTUFBTVUsZUFBZSxJQUFJMUQ7UUFDN0I7SUFDSjtJQUVBLE9BQU9nRDtBQUNYIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3NyYy9saWIvbWF0Y2hpbmcudHM/MzVmMyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBCYW5rVHJhbnNhY3Rpb24sIEludm9pY2UsIFBhcnNlZEFtb3VudCB9IGZyb20gJy4vdHlwZXMnO1xuaW1wb3J0IHsgcGFyc2VEdXRjaEFtb3VudCB9IGZyb20gJy4vcGFyc2Vycyc7XG5cbmV4cG9ydCBpbnRlcmZhY2UgTWF0Y2hSZXN1bHQge1xuICAgIGJhbmtUcmFuc2FjdGlvbj86IEJhbmtUcmFuc2FjdGlvbjtcbiAgICBpbnZvaWNlOiBJbnZvaWNlO1xuICAgIG1hdGNoVHlwZTogTWF0Y2hUeXBlO1xuICAgIGNvbmZpZGVuY2U6IG51bWJlcjtcbiAgICBtYXRjaGVkQW1vdW50OiBQYXJzZWRBbW91bnQ7XG59XG5cbmV4cG9ydCB0eXBlIE1hdGNoVHlwZSA9IFxuICAgIHwgJ1BBSURfU1RBVFVTJyAgICAgICAgLy8gSW52b2ljZSBtYXJrZWQgYXMgXCJEZWZpbml0aWVmXCJcbiAgICB8ICdJTlZPSUNFX05VTUJFUicgICAgIC8vIEludm9pY2UgbnVtYmVyIGZvdW5kIGluIGJhbmsgdHJhbnNhY3Rpb25cbiAgICB8ICdDQVJEX1BBWU1FTlQnICAgICAgIC8vIENhcmQgcGF5bWVudCBtYXRjaFxuICAgIHwgJ01BTlVBTCcgICAgICAgICAgICAvLyBNYW51YWxseSBtYXRjaGVkXG4gICAgfCAnVU5NQVRDSEVEJzsgICAgICAgIC8vIE5vIG1hdGNoIGZvdW5kXG5cbmZ1bmN0aW9uIHBhcnNlSW52b2ljZURhdGUoZGF0ZVN0cjogc3RyaW5nKTogRGF0ZSB7XG4gICAgLy8gUGFyc2UgREQtTU0tWVlZWSBmb3JtYXRcbiAgICBjb25zdCBbZGF5LCBtb250aCwgeWVhcl0gPSBkYXRlU3RyLnNwbGl0KCctJykubWFwKE51bWJlcik7XG4gICAgcmV0dXJuIG5ldyBEYXRlKHllYXIsIG1vbnRoIC0gMSwgZGF5KTtcbn1cblxuZnVuY3Rpb24gcGFyc2VUcmFuc2FjdGlvbkRhdGUoZGF0ZVN0cjogc3RyaW5nKTogRGF0ZSB7XG4gICAgLy8gUGFyc2UgWVlZWS1NTS1ERCBmb3JtYXRcbiAgICBjb25zdCBbeWVhciwgbW9udGgsIGRheV0gPSBkYXRlU3RyLnNwbGl0KCctJykubWFwKE51bWJlcik7XG4gICAgcmV0dXJuIG5ldyBEYXRlKHllYXIsIG1vbnRoIC0gMSwgZGF5KTtcbn1cblxuZnVuY3Rpb24gY2xlYW5EZXNjcmlwdGlvbihkZXNjOiBzdHJpbmcpOiBzdHJpbmcge1xuICAgIHJldHVybiBkZXNjLnRvTG93ZXJDYXNlKCkucmVwbGFjZSgnZmFjdHV1ciAnLCAnJykudHJpbSgpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gbWF0Y2hUcmFuc2FjdGlvbnNXaXRoSW52b2ljZXMoXG4gICAgdHJhbnNhY3Rpb25zOiBCYW5rVHJhbnNhY3Rpb25bXSxcbiAgICBpbnZvaWNlczogSW52b2ljZVtdXG4pOiBNYXRjaFJlc3VsdFtdIHtcbiAgICBjb25zdCByZXN1bHRzOiBNYXRjaFJlc3VsdFtdID0gW107XG4gICAgY29uc3QgdXNlZFRyYW5zYWN0aW9ucyA9IG5ldyBTZXQ8c3RyaW5nPigpO1xuXG4gICAgLy8gRmlyc3QsIGhhbmRsZSBpbnZvaWNlcyBtYXJrZWQgYXMgcGFpZFxuICAgIGludm9pY2VzLmZvckVhY2goaW52b2ljZSA9PiB7XG4gICAgICAgIGNvbnN0IGFtb3VudCA9IHBhcnNlRHV0Y2hBbW91bnQoaW52b2ljZS5iZWRyYWdJbmNsQnR3KTtcbiAgICAgICAgXG4gICAgICAgIGlmIChpbnZvaWNlLnN0YXR1cyA9PT0gJ0RlZmluaXRpZWYnKSB7XG4gICAgICAgICAgICAvLyBGaW5kIGNhcmQgcGF5bWVudCB0cmFuc2FjdGlvbiAoUmFib2JhbmsgU21hcnQgUGF5KSBvbmUgZGF5IGFmdGVyIGludm9pY2UgZGF0ZVxuICAgICAgICAgICAgY29uc3QgY2FyZFBheW1lbnQgPSB0cmFuc2FjdGlvbnMuZmluZCh0ID0+IHtcbiAgICAgICAgICAgICAgICBpZiAodXNlZFRyYW5zYWN0aW9ucy5oYXModC50cmFuc2FjdGllcmVmZXJlbnRpZSkpIHJldHVybiBmYWxzZTtcbiAgICAgICAgICAgICAgICBpZiAodC5uYWFtVGVnZW5wYXJ0aWogIT09ICdSYWJvYmFuayBTbWFydCBQYXknKSByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgY29uc3QgaW52RGF0ZSA9IHBhcnNlSW52b2ljZURhdGUoaW52b2ljZS5mYWN0dXVyZGF0dW0pO1xuICAgICAgICAgICAgICAgIGNvbnN0IHRyYW5zRGF0ZSA9IHBhcnNlVHJhbnNhY3Rpb25EYXRlKHQuZGF0dW0pO1xuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIC8vIENoZWNrIGlmIHRyYW5zYWN0aW9uIGlzIG9uZSBkYXkgYWZ0ZXIgaW52b2ljZVxuICAgICAgICAgICAgICAgIGNvbnN0IGRheURpZmYgPSAodHJhbnNEYXRlLmdldFRpbWUoKSAtIGludkRhdGUuZ2V0VGltZSgpKSAvICgxMDAwICogNjAgKiA2MCAqIDI0KTtcbiAgICAgICAgICAgICAgICBpZiAoZGF5RGlmZiAhPT0gMSkgcmV0dXJuIGZhbHNlO1xuXG4gICAgICAgICAgICAgICAgY29uc3QgdEFtb3VudCA9IHBhcnNlRHV0Y2hBbW91bnQodC5iZWRyYWcpO1xuICAgICAgICAgICAgICAgIHJldHVybiBNYXRoLmFicyh0QW1vdW50LnZhbHVlKSA9PT0gTWF0aC5hYnMoYW1vdW50LnZhbHVlKTtcbiAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICBpZiAoY2FyZFBheW1lbnQpIHtcbiAgICAgICAgICAgICAgICB1c2VkVHJhbnNhY3Rpb25zLmFkZChjYXJkUGF5bWVudC50cmFuc2FjdGllcmVmZXJlbnRpZSk7XG4gICAgICAgICAgICAgICAgcmVzdWx0cy5wdXNoKHtcbiAgICAgICAgICAgICAgICAgICAgaW52b2ljZSxcbiAgICAgICAgICAgICAgICAgICAgYmFua1RyYW5zYWN0aW9uOiBjYXJkUGF5bWVudCxcbiAgICAgICAgICAgICAgICAgICAgbWF0Y2hUeXBlOiAnQ0FSRF9QQVlNRU5UJyxcbiAgICAgICAgICAgICAgICAgICAgbWF0Y2hlZEFtb3VudDogYW1vdW50LFxuICAgICAgICAgICAgICAgICAgICBjb25maWRlbmNlOiAxLjBcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIC8vIElmIG5vIGNhcmQgcGF5bWVudCBmb3VuZCwgbG9vayBmb3IgcmVndWxhciBwYXltZW50IG1hdGNoXG4gICAgICAgICAgICBjb25zdCBtYXRjaGluZ1RyYW5zYWN0aW9uID0gdHJhbnNhY3Rpb25zLmZpbmQodCA9PiB7XG4gICAgICAgICAgICAgICAgaWYgKHVzZWRUcmFuc2FjdGlvbnMuaGFzKHQudHJhbnNhY3RpZXJlZmVyZW50aWUpKSByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgICAgICAgY29uc3QgdEFtb3VudCA9IHBhcnNlRHV0Y2hBbW91bnQodC5iZWRyYWcpO1xuICAgICAgICAgICAgICAgIHJldHVybiBNYXRoLmFicyh0QW1vdW50LnZhbHVlKSA9PT0gTWF0aC5hYnMoYW1vdW50LnZhbHVlKTtcbiAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICBpZiAobWF0Y2hpbmdUcmFuc2FjdGlvbikge1xuICAgICAgICAgICAgICAgIHVzZWRUcmFuc2FjdGlvbnMuYWRkKG1hdGNoaW5nVHJhbnNhY3Rpb24udHJhbnNhY3RpZXJlZmVyZW50aWUpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICByZXN1bHRzLnB1c2goe1xuICAgICAgICAgICAgICAgIGludm9pY2UsXG4gICAgICAgICAgICAgICAgYmFua1RyYW5zYWN0aW9uOiBtYXRjaGluZ1RyYW5zYWN0aW9uLFxuICAgICAgICAgICAgICAgIG1hdGNoVHlwZTogbWF0Y2hpbmdUcmFuc2FjdGlvbiA/ICdQQUlEX1NUQVRVUycgOiAnVU5NQVRDSEVEJyxcbiAgICAgICAgICAgICAgICBtYXRjaGVkQW1vdW50OiBhbW91bnQsXG4gICAgICAgICAgICAgICAgY29uZmlkZW5jZTogbWF0Y2hpbmdUcmFuc2FjdGlvbiA/IDAuNSA6IDBcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gVHJ5IHRvIGZpbmQgZXhhY3QgbWF0Y2ggYnkgaW52b2ljZSBudW1iZXIgaW4gdHJhbnNhY3Rpb24gZGVzY3JpcHRpb25cbiAgICAgICAgY29uc3QgZXhhY3RNYXRjaCA9IHRyYW5zYWN0aW9ucy5maW5kKHQgPT4ge1xuICAgICAgICAgICAgaWYgKHVzZWRUcmFuc2FjdGlvbnMuaGFzKHQudHJhbnNhY3RpZXJlZmVyZW50aWUpKSByZXR1cm4gZmFsc2U7XG5cbiAgICAgICAgICAgIGNvbnN0IGRlc2NyaXB0aW9ucyA9IFtcbiAgICAgICAgICAgICAgICB0Lm9tc2NocmlqdmluZzEsXG4gICAgICAgICAgICAgICAgdC5vbXNjaHJpanZpbmcyLFxuICAgICAgICAgICAgICAgIHQub21zY2hyaWp2aW5nM1xuICAgICAgICAgICAgXS5maWx0ZXIoQm9vbGVhbik7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIGNvbnN0IGNsZWFuSW52b2ljZU51bWJlciA9IGludm9pY2UuZmFjdHV1cm51bW1lci50b0xvd2VyQ2FzZSgpO1xuICAgICAgICAgICAgY29uc3QgaGFzSW52b2ljZU51bWJlciA9IGRlc2NyaXB0aW9ucy5zb21lKGRlc2MgPT4ge1xuICAgICAgICAgICAgICAgIGlmICghZGVzYykgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgICAgIGNvbnN0IGNsZWFuRGVzYyA9IGNsZWFuRGVzY3JpcHRpb24oZGVzYyk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGNsZWFuRGVzYy5pbmNsdWRlcyhjbGVhbkludm9pY2VOdW1iZXIpO1xuICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgIGlmICghaGFzSW52b2ljZU51bWJlcikgcmV0dXJuIGZhbHNlO1xuXG4gICAgICAgICAgICBjb25zdCB0QW1vdW50ID0gcGFyc2VEdXRjaEFtb3VudCh0LmJlZHJhZyk7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIC8vIEZvciBDQUsgcGF5bWVudHMsIGFsbG93IDc1JSBvZiBpbnZvaWNlIGFtb3VudFxuICAgICAgICAgICAgaWYgKHQubmFhbVRlZ2VucGFydGlqLnRvTG93ZXJDYXNlKCkuaW5jbHVkZXMoJ2NhaycpKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIE1hdGguYWJzKHRBbW91bnQudmFsdWUpID09PSBNYXRoLmFicyhhbW91bnQudmFsdWUpICogMC43NTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIFxuICAgICAgICAgICAgLy8gRm9yIG90aGVyIHBheW1lbnRzLCByZXF1aXJlIGV4YWN0IGFtb3VudCBtYXRjaFxuICAgICAgICAgICAgcmV0dXJuIE1hdGguYWJzKHRBbW91bnQudmFsdWUpID09PSBNYXRoLmFicyhhbW91bnQudmFsdWUpO1xuICAgICAgICB9KTtcblxuICAgICAgICBpZiAoZXhhY3RNYXRjaCkge1xuICAgICAgICAgICAgdXNlZFRyYW5zYWN0aW9ucy5hZGQoZXhhY3RNYXRjaC50cmFuc2FjdGllcmVmZXJlbnRpZSk7XG4gICAgICAgICAgICBjb25zdCB0QW1vdW50ID0gcGFyc2VEdXRjaEFtb3VudChleGFjdE1hdGNoLmJlZHJhZyk7XG4gICAgICAgICAgICByZXN1bHRzLnB1c2goe1xuICAgICAgICAgICAgICAgIGludm9pY2UsXG4gICAgICAgICAgICAgICAgYmFua1RyYW5zYWN0aW9uOiBleGFjdE1hdGNoLFxuICAgICAgICAgICAgICAgIG1hdGNoVHlwZTogJ0lOVk9JQ0VfTlVNQkVSJyxcbiAgICAgICAgICAgICAgICBtYXRjaGVkQW1vdW50OiB0QW1vdW50LFxuICAgICAgICAgICAgICAgIGNvbmZpZGVuY2U6IDEuMCAvLyBTZXQgdG8gMTAwJSBmb3IgaW52b2ljZSBudW1iZXIgbWF0Y2hlcyB3aXRoIGNvcnJlY3QgYW1vdW50XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIE5vIG1hdGNoIGZvdW5kXG4gICAgICAgIHJlc3VsdHMucHVzaCh7XG4gICAgICAgICAgICBpbnZvaWNlLFxuICAgICAgICAgICAgYmFua1RyYW5zYWN0aW9uOiB1bmRlZmluZWQsXG4gICAgICAgICAgICBtYXRjaFR5cGU6ICdVTk1BVENIRUQnLFxuICAgICAgICAgICAgbWF0Y2hlZEFtb3VudDogYW1vdW50LFxuICAgICAgICAgICAgY29uZmlkZW5jZTogMFxuICAgICAgICB9KTtcbiAgICB9KTtcblxuICAgIHJldHVybiByZXN1bHRzO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gdXBkYXRlTWF0Y2goXG4gICAgZXhpc3RpbmdNYXRjaGVzOiBNYXRjaFJlc3VsdFtdLFxuICAgIHRyYW5zYWN0aW9uOiBCYW5rVHJhbnNhY3Rpb24gfCB1bmRlZmluZWQsXG4gICAgaW52b2ljZTogSW52b2ljZVxuKTogTWF0Y2hSZXN1bHRbXSB7XG4gICAgLy8gUmVtb3ZlIGFueSBleGlzdGluZyBtYXRjaGVzIGZvciB0aGlzIGludm9pY2VcbiAgICBjb25zdCBmaWx0ZXJlZE1hdGNoZXMgPSBleGlzdGluZ01hdGNoZXMuZmlsdGVyKFxuICAgICAgICBtYXRjaCA9PiBtYXRjaC5pbnZvaWNlICE9PSBpbnZvaWNlXG4gICAgKTtcblxuICAgIC8vIEFkZCB0aGUgbmV3IG1hdGNoXG4gICAgZmlsdGVyZWRNYXRjaGVzLnB1c2goe1xuICAgICAgICBiYW5rVHJhbnNhY3Rpb246IHRyYW5zYWN0aW9uLFxuICAgICAgICBpbnZvaWNlLFxuICAgICAgICBtYXRjaFR5cGU6IHRyYW5zYWN0aW9uID8gJ01BTlVBTCcgOiAnVU5NQVRDSEVEJyxcbiAgICAgICAgY29uZmlkZW5jZTogdHJhbnNhY3Rpb24gPyAxIDogMCxcbiAgICAgICAgbWF0Y2hlZEFtb3VudDogcGFyc2VEdXRjaEFtb3VudChpbnZvaWNlLmJlZHJhZ0luY2xCdHcpXG4gICAgfSk7XG5cbiAgICByZXR1cm4gZmlsdGVyZWRNYXRjaGVzO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZ2V0TWF0Y2hpbmdTdGF0aXN0aWNzKG1hdGNoZXM6IE1hdGNoUmVzdWx0W10pIHtcbiAgICBjb25zdCBzdGF0cyA9IHtcbiAgICAgICAgdG90YWxNYXRjaGVzOiBtYXRjaGVzLmxlbmd0aCxcbiAgICAgICAgYnlUeXBlOiB7XG4gICAgICAgICAgICBQQUlEX1NUQVRVUzogMCxcbiAgICAgICAgICAgIElOVk9JQ0VfTlVNQkVSOiAwLFxuICAgICAgICAgICAgQ0FSRF9QQVlNRU5UOiAwLFxuICAgICAgICAgICAgTUFOVUFMOiAwLFxuICAgICAgICAgICAgVU5NQVRDSEVEOiAwXG4gICAgICAgIH0sXG4gICAgICAgIHRvdGFsQW1vdW50OiAwLFxuICAgICAgICBtYXRjaGVkQW1vdW50OiAwLFxuICAgICAgICB1bm1hdGNoZWRBbW91bnQ6IDBcbiAgICB9O1xuXG4gICAgbWF0Y2hlcy5mb3JFYWNoKG1hdGNoID0+IHtcbiAgICAgICAgLy8gQ291bnQgYnkgdHlwZVxuICAgICAgICBzdGF0cy5ieVR5cGVbbWF0Y2gubWF0Y2hUeXBlXSsrO1xuXG4gICAgICAgIC8vIFN1bSBhbW91bnRzXG4gICAgICAgIGNvbnN0IGFtb3VudCA9IE1hdGguYWJzKG1hdGNoLm1hdGNoZWRBbW91bnQudmFsdWUpO1xuICAgICAgICBzdGF0cy50b3RhbEFtb3VudCArPSBhbW91bnQ7XG4gICAgICAgIFxuICAgICAgICBpZiAobWF0Y2gubWF0Y2hUeXBlICE9PSAnVU5NQVRDSEVEJykge1xuICAgICAgICAgICAgc3RhdHMubWF0Y2hlZEFtb3VudCArPSBhbW91bnQ7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBzdGF0cy51bm1hdGNoZWRBbW91bnQgKz0gYW1vdW50O1xuICAgICAgICB9XG4gICAgfSk7XG5cbiAgICByZXR1cm4gc3RhdHM7XG59XG4iXSwibmFtZXMiOlsicGFyc2VEdXRjaEFtb3VudCIsInBhcnNlSW52b2ljZURhdGUiLCJkYXRlU3RyIiwiZGF5IiwibW9udGgiLCJ5ZWFyIiwic3BsaXQiLCJtYXAiLCJOdW1iZXIiLCJEYXRlIiwicGFyc2VUcmFuc2FjdGlvbkRhdGUiLCJjbGVhbkRlc2NyaXB0aW9uIiwiZGVzYyIsInRvTG93ZXJDYXNlIiwicmVwbGFjZSIsInRyaW0iLCJtYXRjaFRyYW5zYWN0aW9uc1dpdGhJbnZvaWNlcyIsInRyYW5zYWN0aW9ucyIsImludm9pY2VzIiwicmVzdWx0cyIsInVzZWRUcmFuc2FjdGlvbnMiLCJTZXQiLCJmb3JFYWNoIiwiaW52b2ljZSIsImFtb3VudCIsImJlZHJhZ0luY2xCdHciLCJzdGF0dXMiLCJjYXJkUGF5bWVudCIsImZpbmQiLCJ0IiwiaGFzIiwidHJhbnNhY3RpZXJlZmVyZW50aWUiLCJuYWFtVGVnZW5wYXJ0aWoiLCJpbnZEYXRlIiwiZmFjdHV1cmRhdHVtIiwidHJhbnNEYXRlIiwiZGF0dW0iLCJkYXlEaWZmIiwiZ2V0VGltZSIsInRBbW91bnQiLCJiZWRyYWciLCJNYXRoIiwiYWJzIiwidmFsdWUiLCJhZGQiLCJwdXNoIiwiYmFua1RyYW5zYWN0aW9uIiwibWF0Y2hUeXBlIiwibWF0Y2hlZEFtb3VudCIsImNvbmZpZGVuY2UiLCJtYXRjaGluZ1RyYW5zYWN0aW9uIiwiZXhhY3RNYXRjaCIsImRlc2NyaXB0aW9ucyIsIm9tc2NocmlqdmluZzEiLCJvbXNjaHJpanZpbmcyIiwib21zY2hyaWp2aW5nMyIsImZpbHRlciIsIkJvb2xlYW4iLCJjbGVhbkludm9pY2VOdW1iZXIiLCJmYWN0dXVybnVtbWVyIiwiaGFzSW52b2ljZU51bWJlciIsInNvbWUiLCJjbGVhbkRlc2MiLCJpbmNsdWRlcyIsInVuZGVmaW5lZCIsInVwZGF0ZU1hdGNoIiwiZXhpc3RpbmdNYXRjaGVzIiwidHJhbnNhY3Rpb24iLCJmaWx0ZXJlZE1hdGNoZXMiLCJtYXRjaCIsImdldE1hdGNoaW5nU3RhdGlzdGljcyIsIm1hdGNoZXMiLCJzdGF0cyIsInRvdGFsTWF0Y2hlcyIsImxlbmd0aCIsImJ5VHlwZSIsIlBBSURfU1RBVFVTIiwiSU5WT0lDRV9OVU1CRVIiLCJDQVJEX1BBWU1FTlQiLCJNQU5VQUwiLCJVTk1BVENIRUQiLCJ0b3RhbEFtb3VudCIsInVubWF0Y2hlZEFtb3VudCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/lib/matching.ts\n"));

/***/ })

});